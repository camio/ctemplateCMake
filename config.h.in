/* Namespace for Google classes */
#cmakedefine GOOGLE_NAMESPACE @GOOGLE_NAMESPACE@

/* the location of <unordered_map> or <hash_map> */
#cmakedefine HASH_MAP_H @HASH_MAP_H@

/* the namespace of hash_map/hash_set */
#cmakedefine HASH_NAMESPACE @HASH_NAMESPACE@

/* the location of <unordered_set> or <hash_set> */
#cmakedefine HASH_SET_H  @HASH_SET_H@

/* define if the compiler has hash_map */
#cmakedefine HAVE_HASH_MAP  @HAVE_HASH_MAP@

/* define if the compiler has hash_set */
#cmakedefine HAVE_HASH_SET  @HAVE_HASH_SET@

/* Define to 1 if you have the <memory.h> header file. */
#cmakedefine HAVE_MEMORY_H  @HAVE_MEMORY_H@

/* define if the compiler implements namespaces */
#cmakedefine HAVE_NAMESPACES  @HAVE_NAMESPACES@

/* Define to 1 if you have the <stdint.h> header file. */
#cmakedefine HAVE_STDINT_H  @HAVE_STDINT_H@

/* Define to 1 if you have the <stdlib.h> header file. */
#cmakedefine HAVE_STDLIB  @HAVE_STDLIB@

/* Define to 1 if you have the <string.h> header file. */
#cmakedefine HAVE_STRING_H  @HAVE_STRING_H@

/* Define to 1 if you have the <sys/stat.h> header file. */
#cmakedefine HAVE_SYS_STAT_H  @HAVE_SYS_STAT_H@

/* Define to 1 if you have the <sys/types.h> header file. */
#cmakedefine HAVE_SYS_TYPES_H  @HAVE_SYS_TYPES_H@

/* Define to 1 if the system has the type `uint32_t'. */
#cmakedefine HAVE_UINT32_T @HAVE_UINT32_T@

/* Define to 1 if the system has the type `uint64_t'. */
#cmakedefine HAVE_UINT64_T @HAVE_UINT64_T@

/* Define to 1 if you have the <unistd.h> header file. */
#cmakedefine HAVE_UNISTD_H

/* define if the compiler supports unordered_{map,set} */
#cmakedefine HAVE_UNORDERED_MAP

/* Define to 1 if the system has the type `__uint32. */
#cmakedefine HAVE___INT32  @HAVE___INT32@

/* Define to 1 if the system has the type `__uint64. */
#cmakedefine HAVE___INT64 @HAVE___INT64@

/* The namespace to put the htmlparser code. */
#cmakedefine HTMLPARSER_NAMESPACE  @HTMLPARSER_NAMESPACE@

/* Define to the full name and version of this package. */
#cmakedefine PACKAGE_STRING  @PACKAGE_STRING@

/* printf format code for printing a size_t and ssize_t */
#cmakedefine PRIdS  @PRIdS@

/* printf format code for printing a size_t and ssize_t */
#cmakedefine PRIuS  @PRIuS@

/* printf format code for printing a size_t and ssize_t */
#cmakedefine PRIxS  @PRIxS@

/* Define to 1 if you have the ANSI C header files. */
#cmakedefine STDC_HEADERS  @STDC_HEADERS@

/* the namespace where STL code like vector<> is defined */
#cmakedefine STL_NAMESPACE  @STL_NAMESPACE@

/* Stops putting the code inside the Google namespace */
#cmakedefine _END_GOOGLE_NAMESPACE_ @_END_GOOGLE_NAMESPACE_@

/* Puts following code inside the Google namespace */
#cmakedefine _START_GOOGLE_NAMESPACE_ @_START_GOOGLE_NAMESPACE_@

